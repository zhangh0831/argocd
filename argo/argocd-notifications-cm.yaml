apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data: 
  service.webhook.slack: |
    url: https://hooks.slack.com/services/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
    headers:
      - name: Content-Type
        value: application/json
  context: |
    argocdUrl: http://192.168.10.140:31500/
  template.app-sync-status: |
    webhook: 
      slack:
        method: POST
    # message: |
    #   Application {{.app.metadata.name}} sync is {{.app.status.sync.status}}.
    #   Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
        body: |
         {
           "attachments": [{
             "title": "{{.app.metadata.name}}",
             "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
             "color": "#18be52",
             "fields": [{
               "title": "Sync Status",
               "value": "{{.app.status.sync.status}}",
               "short": true
             }, {
               "title": "Repository",
               "value": "{{.app.spec.source.repoURL}}",
               "short": true
             }]
           }]
         }
  # trigger.on-deployed: |
  #   when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
  #   oncePer: app.status.sync.revision
  #   send: [app-sync-succeeded]
  # trigger.on-health-degraded: |
  #   when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
  #   oncePer: app.status.sync.revision
  #   send: [app-sync-succeeded]
  trigger.on-health-degraded: |
    - description: Application has degraded
      send: [app-sync-status]
      when: app.status.health.status == 'Degraded'
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send: [app-sync-status]
      when: app.status.operationState.phase in ['Succeeded']
  trigger.on-sync-degraded: |
    - description: Application Out of sync
      send: [app-sync-status]
      # when: app.status.operationState.phase in ['OutOfSync']
      when: app.status.sync.status == 'OutOfSync'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send:
      - app-sync-status
      when: app.status.operationState.phase in ['Error', 'Failed']
  subscriptions: |
    - recipients: [slack]
      triggers: [on-health-degraded, on-sync-succeeded, on-sync-degraded, on-sync-failed]